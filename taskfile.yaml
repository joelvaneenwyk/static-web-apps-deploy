# yaml-language-server: $schema=https://json.schemastore.org/taskfile.json
# https://taskfile.dev

version: "3"

dotenv:
  - .env

vars:
  DOCKER_IMAGE_NAME: "static-web-apps-deploy"
  DOCKER_IMAGE_TAG: "{{ .DOCKER_IMAGE_NAME }}:stable"
  BUILD_DIR: "{{ .TASKFILE_DIR }}/.build"

tasks:
  default:
    cmds:
      - task: run

  install-sass:
    status:
      - sass --embedded --version
    cmds:
      - cmd: 'brew install sass/sass/sass'
        platforms: [darwin, linux]
      - cmd: 'scoop install sass'
        platforms: [windows]

  init-build:
    status:
      - test -d .build
    cmds:
      - cmd: cmd /d /c mkdir "{{ .BUILD_DIR }}"
        platforms: [windows]
      - cmd: mkdir -p "{{ .BUILD_DIR }}"
        platforms: [linux, darwin]

  install-node-packages:
    sources:
      - "{{ .TASKFILE_DIR }}/package.json"
    generates:
      - "{{ .TASKFILE_DIR }}/node_modules/.bin/autoprefixer"
      - "{{ .TASKFILE_DIR }}/node_modules/.bin/prettier"
      - "{{ .TASKFILE_DIR }}/node_modules/.bin/postcss"
    cmds:
      - cmd: npm install

  init:
    deps: [build]

  build:
    deps: [install-sass, install-node-packages, init-build]
    sources:
      - "{{ .TASKFILE_DIR }}/package.json"
      - "{{ .TASKFILE_DIR }}/test/hugo.toml"
      - "{{ .TASKFILE_DIR }}/test/themes/nightfall/theme.toml"
    generates:
      - "{{ .TASKFILE_DIR }}/test/public/index.html"
      - "{{ .TASKFILE_DIR }}/test/public/404.html"
    cmds:
      - cmd: npm run build

  container:
    deps: [init]
    vars:
      DOCKERFILE_PATH: "{{ .TASKFILE_DIR }}/Dockerfile"
      DOCKER_BUILD_LOG_PATH: "{{ .BUILD_DIR }}/docker-build.log"
    sources:
      - "{{ .DOCKERFILE_PATH }}"
    generates:
      - "{{ .DOCKER_BUILD_LOG_PATH }}"
    cmds:
      - cmd: >-
          docker build
          --file "{{ fromSlash .DOCKERFILE_PATH }}"
          -t "static-web-apps-deploy:stable"
          --progress plain
          "{{ fromSlash .TASKFILE_DIR }}"
          >"{{ fromSlash .DOCKER_BUILD_LOG_PATH }}"

  run:
    deps: [container]
    cmds:
      - cmd: 'docker run --rm -it "static-web-apps-deploy:stable" {{ .CLI_ARGS }}'

  docker-build:
    internal: true
    cmds:
      - cmd: >-
          docker build --progress=plain -t "{{ .DOCKER_IMAGE_TAG }}" .

  docker-run:
    internal: true
    deps: [docker-build]
    vars:
      ARGS: '{{ default "" .ARGS }}'
    cmds:
      - cmd: >-
          docker run
          -it
          --rm
          --restart=no
          --log-driver local
          --log-opt max-size=10m
          --log-opt max-file=3
          --workdir "/github/workspace"
          -v "{{.ROOT_DIR}}:/github/workspace"
          --name "static-web-apps-deploy"
          --label "static-web-apps-deploy"
          -e STATIC_APP_LOCATION="./test/public"
          "static-web-apps-deploy"
          {{.ARGS}}

  run-default:
    deps: [init]
    vars:
      outputLocation: '{{ default "./test/public" .OUTPUT_LOCATION }}'
      skipApiBuild: "{{ default false .SKIP_API_BUILD }}"
      skipDeployOnMissingSecrets: "{{ default false .SKIP_DEPLOY_ON_MISSING_SECRETS }}"
    cmds:
      - task: docker-run
        vars:
          ARGS: >-
            --verbose
            --workdir "/github/workspace"
            --app "./test"
            --appBuildCommand="hugo"
            --outputLocation="{{.outputLocation}}"
            {{if eq .skipApiBuild "true"}}--skipApiBuild{{end}}
            {{if eq .skipDeployOnMissingSecrets "true"}}--skipDeployOnMissingSecrets{{end}}

  run-swa:
    vars:
      SKIP_DEPLOY_ON_MISSING_SECRETS: true
      SKIP_APP_BUILD: true
      APP_LOCATION: '{{ .TASKFILE_DIR }}/test/public'
      DOCKER_APP_LOCATION: '/root/build'
    # https://github.com/Azure/static-web-apps/issues/679#issuecomment-1357799789
    # skip_deploy_on_missing_secrets: true
    # ABOVE: this one is documented in few places, but it's expected to be a ENV var!
    # see https://github.com/Azure/static-web-apps/issues/679
    env:
      SKIP_DEPLOY_ON_MISSING_SECRETS: '{{ .SKIP_DEPLOY_ON_MISSING_SECRETS }}'
    cmds:
      - cmd: >-
          docker run --entrypoint "/bin/staticsites/StaticSitesClient"
          --volume "{{ fromSlash .APP_LOCATION }}":"{{ .DOCKER_APP_LOCATION }}"
          mcr.microsoft.com/appsvc/staticappsclient:stable
          upload
          --skipAppBuild {{ .SKIP_APP_BUILD }}
          --app "{{ .DOCKER_APP_LOCATION }}"
          --apiToken "{{ .AZURE_STATIC_WEB_APPS_API_TOKEN }}"

  get-binaries:
    vars:
      linux_url: "https://swalocaldeploy.azureedge.net/downloads/1.0.020981/linux/StaticSitesClient"
      linux_sha: "e55db21d0720a12098804559152303e66846bdd94c13a30b30be29a0fc9ae366"

      win_url: "https://swalocaldeploy.azureedge.net/downloads/1.0.020981/windows/StaticSitesClient.exe"
      win_sha: "4e4eb72aef26641e236c24929c822500e956bda099ca78054112cadf20261107"

      osx_url: "https://swalocaldeploy.azureedge.net/downloads/1.0.020981/macOS/StaticSitesClient"
      osx_sha: "e0f2ae7ec297510a1b3b9332c0dc0dd962a51adb8ea13cd4f3746d79fc24a7e9"
    cmds:
      - cmd: 'mkdir -p .bin'
      - cmd: 'curl -L -o ./.bin/StaticSitesClient {{ .linux_url }}'
      - cmd: 'chmod +x ./.bin/StaticSitesClient'




